// ==UserScript==
// @name         Lehrgangsplanung Leitstellenspiel
// @namespace    http://tampermonkey.net/
// @version      0.5
// @description  Ein Script zur Lehrgangsplanung und Anzeige vorhandener Lehrgänge im Leitstellenspiel
// @author       MrGreenscreen
// @match        https://www.leitstellenspiel.de/*
// @grant        none
// @require      https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js
// ==/UserScript==

(function() {
    'use strict';

    // Button hinzufügen
    var button = document.createElement("button");
    button.innerHTML = "Lehrgangsübersicht";
    button.style.position = "fixed";
    button.style.top = "10px";
    button.style.left = "50%";
    button.style.transform = "translateX(-50%)";
    button.style.zIndex = 1000;
    button.style.color = "black"; // Schriftfarbe auf Schwarz setzen
    document.body.appendChild(button);

    // Event-Listener für den Button
    button.addEventListener("click", function() {
        openModal();
    });

    // Modal-Funktion
    function openModal() {
        // Modal-Hintergrund
        var modalBackground = document.createElement("div");
        modalBackground.style.position = "fixed";
        modalBackground.style.top = "0";
        modalBackground.style.left = "0";
        modalBackground.style.width = "100%";
        modalBackground.style.height = "100%";
        modalBackground.style.backgroundColor = "rgba(0,0,0,0.5)";
        modalBackground.style.zIndex = 1000;
        modalBackground.id = "modalBackground";
        document.body.appendChild(modalBackground);

        // Modal-Fenster
        var modalWindow = document.createElement("div");
        modalWindow.style.position = "fixed";
        modalWindow.style.top = "50%";
        modalWindow.style.left = "50%";
        modalWindow.style.transform = "translate(-50%, -50%)";
        modalWindow.style.width = "600px";
        modalWindow.style.height = "70%";
        modalWindow.style.overflowY = "scroll"; // Scrollbar hinzufügen
        modalWindow.style.padding = "20px";
        modalWindow.style.backgroundColor = "#808080"; // Hintergrundfarbe auf Grau setzen
        modalWindow.style.color = "black"; // Schriftfarbe auf Schwarz setzen
        modalWindow.style.zIndex = 1001;
        modalWindow.id = "modalWindow";
        modalBackground.appendChild(modalWindow);

        // Titel
        var title = document.createElement("h2");
        title.innerHTML = "Lehrgangsübersicht";
        modalWindow.appendChild(title);

        // Button zum Abrufen der vorhandenen Lehrgänge
        var fetchButton = document.createElement("button");
        fetchButton.innerHTML = "Vorhandene Lehrgänge abrufen";
        fetchButton.style.marginBottom = "20px";
        modalWindow.appendChild(fetchButton);

        var lehrgaengeList = document.createElement("div");
        lehrgaengeList.id = "lehrgaengeList";
        modalWindow.appendChild(lehrgaengeList);

        fetchButton.addEventListener("click", function() {
            console.log("Fetching existing courses..."); // Debugging-Meldung
            getLehrgaenge(lehrgaengeList);
        });

        // Schließen-Button
        var closeButton = document.createElement("button");
        closeButton.innerHTML = "Schließen";
        closeButton.style.marginTop = "20px";
        closeButton.addEventListener("click", function() {
            closeModal();
        });
        modalWindow.appendChild(closeButton);

        // Export-Button
        var exportButton = document.createElement("button");
        exportButton.innerHTML = "Exportieren";
        exportButton.style.marginTop = "20px";
        exportButton.style.marginLeft = "10px";
        exportButton.addEventListener("click", function() {
            exportTableToExcel('lehrgaengeTable', 'lehrgaenge.xlsx');
        });
        modalWindow.appendChild(exportButton);

        // Event-Listener zum Schließen des Modals
        modalBackground.addEventListener("click", function(event) {
            if (event.target == modalBackground) {
                closeModal();
            }
        });
    }

    // Funktion zum Schließen des Modals
    function closeModal() {
        var modalBackground = document.getElementById("modalBackground");
        if (modalBackground) {
            modalBackground.remove();
        }
    }

    // Funktion zum Abrufen und Anzeigen der vorhandenen Lehrgänge des Personals
    async function getLehrgaenge(container) {
        container.innerHTML = ''; // Vorherigen Inhalt löschen

        var lehrgaenge = [];

        try {
            // Abrufen aller Wachen
            var response = await fetch('/api/buildings');
            if (!response.ok) {
                throw new Error(`Network response was not ok for /api/buildings: ${response.statusText}`);
            }
            var buildings = await response.json();
            console.log("Buildings fetched:", buildings); // Debugging-Meldung

            for (let building of buildings) {
                console.log(`Processing building: ID=${building.id}, Name=${building.name}`); // Debugging-Meldung

                // Abrufen des Personals der Wache von der neuen URL
                let personalsResponse = await fetch(`/buildings/${building.id}/personals`);
                if (!personalsResponse.ok) {
                    throw new Error(`Network response was not ok for /buildings/${building.id}/personals: ${personalsResponse.statusText}`);
                }
                let personalsHtml = await personalsResponse.text();
                let parser = new DOMParser();
                let doc = parser.parseFromString(personalsHtml, 'text/html');
                let personnelElements = doc.querySelectorAll('table#personal_table > tbody > tr');

                console.log(`Personnel for building ${building.id} fetched:`, personnelElements); // Debugging-Meldung

                var IPersonal = Array.from(personnelElements).map(personElement => {
                    return Array.from(personElement.querySelector('td:nth-child(2)').textContent.split(',')).map(Education => Education.trim());
                });

                var IStatistic = {};

                IPersonal.forEach(Personal => {
                    if (Personal.length == 1 && Personal[0] == '') {
                        if (!IStatistic.hasOwnProperty('empty')) IStatistic['empty'] = 0;
                        IStatistic['empty']++;
                    } else {
                        Personal.forEach(Education => {
                            if (!IStatistic.hasOwnProperty(Education)) IStatistic[Education] = 0;
                            IStatistic[Education]++;
                        });
                    }
                });

                Object.keys(IStatistic).forEach(Statistic => {
                    lehrgaenge.push({
                        wache: building.caption,
                        lehrgang: `${IStatistic[Statistic]}x ${Statistic}`,
                        totalPersonnel: personnelElements.length, // Gesamtzahl des Personals hinzufügen
                        overAssigned: IStatistic[Statistic] > personnelElements.length
                    });
                });

                console.log(`Statistics for building ${building.id}:`, IStatistic); // Debugging-Meldung
            }
        } catch (error) {
            console.error("Error fetching data:", error); // Debugging-Meldung
            container.innerText = `Fehler beim Abrufen der Daten: ${error.message}`; // Fehleranzeige
            return;
        }

        console.log("Fetched courses:", lehrgaenge); // Debugging-Meldung

        if (lehrgaenge.length > 0) {
            var table = document.createElement("table");
            table.id = "lehrgaengeTable";
            table.style.width = "100%";
            table.style.borderCollapse = "collapse";
            var thead = document.createElement("thead");
            var tbody = document.createElement("tbody");

            var headerRow = document.createElement("tr");
            var headerWache = document.createElement("th");
            headerWache.innerText = "Wache";
            headerWache.style.border = "1px solid black";
            var headerLehrgang = document.createElement("th");
            headerLehrgang.innerText = "Lehrgang";
            headerLehrgang.style.border = "1px solid black";
            var headerTotalPersonnel = document.createElement("th");
            headerTotalPersonnel.innerText = "Gesamtpersonal";
            headerTotalPersonnel.style.border = "1px solid black";
            headerRow.appendChild(headerWache);
            headerRow.appendChild(headerLehrgang);
            headerRow.appendChild(headerTotalPersonnel);
            thead.appendChild(headerRow);
            table.appendChild(thead);

            lehrgaenge.forEach(function(lehrgang) {
                var row = document.createElement("tr");
                var cellWache = document.createElement("td");
                cellWache.innerText = lehrgang.wache;
                cellWache.style.border = "1px solid black";
                var cellLehrgang = document.createElement("td");
                cellLehrgang.innerText = lehrgang.lehrgang;
                cellLehrgang.style.border = "1px solid black";
                if (lehrgang.overAssigned) {
                    cellLehrgang.style.backgroundColor = "red"; // Hintergrundfarbe für überzähliges Personal
                }
                var cellTotalPersonnel = document.createElement("td");
                cellTotalPersonnel.innerText = lehrgang.totalPersonnel;
                cellTotalPersonnel.style.border = "1px solid black";
                row.appendChild(cellWache);
                row.appendChild(cellLehrgang);
                row.appendChild(cellTotalPersonnel);
                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            container.appendChild(table);
        } else {
            container.innerText = "Keine Lehrgänge gefunden.";
        }
    }

    // Funktion zum Exportieren der Tabelle als Excel-Datei
    function exportTableToExcel(tableID, filename = '') {
        var wb = XLSX.utils.book_new();
        var ws = XLSX.utils.table_to_sheet(document.getElementById(tableID));
        XLSX.utils.book_append_sheet(wb, ws, 'Lehrgaenge');

        // Dateiname festlegen
        filename = filename ? filename : 'lehrgaenge.xlsx';

        XLSX.writeFile(wb, filename);
    }
})();
